/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.2.0).
 * https://openapi-generator.tech Do not edit the class manually.
 */
package com.ionos.demo.shoppingcart.openapi.api;

import com.ionos.demo.shoppingcart.openapi.model.ShoppingCartObject;
import io.swagger.annotations.*;
import java.util.List;
import java.util.Optional;
import javax.validation.Valid;
import javax.validation.constraints.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
@Validated
@Api(value = "carts", description = "the carts API")
public interface CartsApi {

  default Optional<NativeWebRequest> getRequest() {
    return Optional.empty();
  }

  /**
   * GET /carts Lists all shopping carts.
   *
   * @return The shopping cart list. (status code 200)
   */
  @ApiOperation(
      value = "",
      nickname = "listCarts",
      notes = "Lists all shopping carts. ",
      response = ShoppingCartObject.class,
      responseContainer = "List",
      tags = {
        "Middleware",
      })
  @ApiResponses(
      value = {
        @ApiResponse(
            code = 200,
            message = "The shopping cart list.",
            response = ShoppingCartObject.class,
            responseContainer = "List")
      })
  @GetMapping(
      value = "/carts",
      produces = {"application/json"})
  default ResponseEntity<List<ShoppingCartObject>> listCarts() {
    getRequest()
        .ifPresent(
            request -> {
              for (MediaType mediaType : MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                  String exampleString =
                      "{ \"owner\" : \"stephan.fuhrmann\", \"expires_at\" :"
                          + " \"2000-01-23T04:56:07.000+00:00\", \"created_at\" :"
                          + " \"2000-01-23T04:56:07.000+00:00\", \"id\" : \"id\" }";
                  ApiUtil.setExampleResponse(request, "application/json", exampleString);
                  break;
                }
              }
            });
    return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
  }

  /**
   * POST /carts Creates a new shopping cart.
   *
   * @param shoppingCartObject (required)
   * @return The shopping cart service response. (status code 201)
   */
  @ApiOperation(
      value = "",
      nickname = "newCart",
      notes = "Creates a new shopping cart. ",
      response = ShoppingCartObject.class,
      tags = {
        "User",
        "Middleware",
      })
  @ApiResponses(
      value = {
        @ApiResponse(
            code = 201,
            message = "The shopping cart service response.",
            response = ShoppingCartObject.class)
      })
  @PostMapping(
      value = "/carts",
      produces = {"application/json"},
      consumes = {"application/json"})
  default ResponseEntity<ShoppingCartObject> newCart(
      @ApiParam(value = "", required = true) @Valid @RequestBody
          ShoppingCartObject shoppingCartObject) {
    getRequest()
        .ifPresent(
            request -> {
              for (MediaType mediaType : MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                  String exampleString =
                      "{ \"owner\" : \"stephan.fuhrmann\", \"expires_at\" :"
                          + " \"2000-01-23T04:56:07.000+00:00\", \"created_at\" :"
                          + " \"2000-01-23T04:56:07.000+00:00\", \"id\" : \"id\" }";
                  ApiUtil.setExampleResponse(request, "application/json", exampleString);
                  break;
                }
              }
            });
    return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);
  }
}
